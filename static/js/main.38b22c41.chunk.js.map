{"version":3,"sources":["contexts/AuthProvider.jsx","components/QuizItem.jsx","components/QuizList.jsx","data/mock-data.js","api/quizzes.js","pages/Quizzes.jsx","api/scores.js","pages/QuizDetails.jsx","components/QuizNav.jsx","components/CategoryTable.jsx","pages/category/CategoryIndex.jsx","pages/QuizIndex.jsx","components/LabelInput.jsx","components/Login.jsx","components/Register.jsx","components/PrivateRoute.jsx","pages/ScoreIndex.jsx","pages/QuizEdit.jsx","components/UserComponent.jsx","App.js","reportWebVitals.js","index.js","api/index.js","api/users.js"],"names":["JWT_TOKEN_KEY","config","token_key","AuthContext","createContext","parseJwt","token","base64url","split","jsonPayload","Buffer","from","toString","JSON","parse","parseExp","exp","Number","isNaN","Date","useAuth","useContext","useSession","loading","error","user","ready","isAuthed","Boolean","useRegister","register","useLogin","login","useLogout","logout","AuthProvider","children","useState","setReady","setLoading","setError","localStorage","getItem","setToken","setUser","setSession","useCallback","u","a","console","log","userId","expiry","stillValid","setItem","removeItem","setAuthToken","api","useEffect","email","password","name","value","useMemo","Provider","QuizItem","id","img","title","description","category","className","src","alt","to","QuizList","cat","quizzes","filter","q","map","CATEGORY_DATA","cat_name","getAllItems","axios","get","then","res","data","deleteQuiz","method","url","getQuizById","updateQuizById","put","Quizzes","useQuery","refetchOnMount","isLoading","isError","Spinner","animation","variant","find","e","createScore","quiz","score","post","deleteScoreById","getScoresByUserId","QuizDetails","currentQuestion","setCurrentQuestion","showScore","setShowScore","setScore","show","setShow","handleClose","history","useHistory","useParams","apiQuizzes","currentQuiz","userScores","apiScores","useMutation","mutate","deleteScore","handleModalDelete","replace","handleAnswerOptionClick","isRight","nextQuestion","questions","length","roles","includes","data-cy","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","event","question","answer1","correctAnswer","answer2","answer3","Table","responsive","scoreItem","quiz_id","date","toLocaleString","cy-data","handleOnDeleteScore","QuizNav","handleLogout","Navbar","collapseOnSelect","expand","Container","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","Divider","CategoryTable","catItem","cat_id","CategoryIndex","QuizIndex","selectedQuiz","setSelectedQuiz","handleOnClick","quizItem","QuizListItem","item","Offcanvas","categories","LabelInput","label","type","defaultValue","validation","rest","isActive","useFormContext","errors","formState","htmlFor","placeholder","message","validationRules","required","Login","methods","useForm","handleSubmit","reset","handleCancel","handleLogin","onSubmit","disabled","getValues","pattern","minLength","confirmPassword","validate","notIdentical","handleRegister","PrivateRoute","role","pathname","useLocation","ScoreIndex","sdata","toLocaleDateString","min","max","QuizEdit","goToHomePage","handleUpdate","UserComponent","rol","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById","axiosRoot","create","baseURL","process","headers","Authorization","defaults","getById"],"mappings":"2YAYMA,EAAgBC,EAAOC,UACvBC,EAAcC,0BAEpB,SAASC,EAASC,GAChB,IAAKA,EAAO,MAAO,GACnB,IAAMC,EAAYD,EAAME,MAAM,KAAK,GAE7BC,EADUC,EAAOC,KAAKJ,EAAW,UACXK,SAAS,SACrC,OAAOC,KAAKC,MAAML,GAGpB,SAASM,EAASC,GAChB,OAAKA,GACc,kBAARA,IAAkBA,EAAMC,OAAOD,IACtCE,MAAMF,GAAa,KAChB,IAAIG,KAAW,IAANH,IAHC,KAMnB,IAAMI,EAAU,kBAAMC,qBAAWlB,IAEpBmB,EAAa,WAAO,IAAD,EACiBF,IAAvCG,EADsB,EACtBA,QAASC,EADa,EACbA,MAAOlB,EADM,EACNA,MACxB,MAAO,CACLiB,UACAC,QACAlB,QACAmB,KAN4B,EACCA,KAM7BC,MAP4B,EACOA,MAOnCC,SAAUC,QAAQtB,KAITuB,EAAc,WAEzB,OADqBT,IAAbU,UAIGC,EAAW,WAEtB,OADkBX,IAAVY,OAIGC,EAAY,WAEvB,OADmBb,IAAXc,QAIGC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBC,oBAAS,GADS,mBACrCX,EADqC,KAC9BY,EAD8B,OAEdD,oBAAS,GAFK,mBAErCd,EAFqC,KAE5BgB,EAF4B,OAGlBF,mBAAS,IAHS,mBAGrCb,EAHqC,KAG9BgB,EAH8B,OAIlBH,mBAASI,aAAaC,QAAQ1C,IAJZ,mBAIrCM,EAJqC,KAI9BqC,EAJ8B,OAKpBN,mBAAS,MALW,mBAKrCZ,EALqC,KAK/BmB,EAL+B,KAOtCC,EAAaC,sBAAW,uCAAC,WAAOxC,EAAOyC,GAAd,uBAAAC,EAAA,yDAC7BC,QAAQC,IAAIzB,GADiB,EAELpB,EAASC,GAAzBU,EAFqB,EAErBA,IAAKmC,EAFgB,EAEhBA,OACPC,EAASrC,EAASC,IAClBqC,EAAaD,GAAU,IAAIjC,MAG/BsB,aAAaa,QAAQtD,EAAeM,IAEpCmC,aAAac,WAAWvD,GACxBM,EAAQ,MAEVkD,YAAalD,GACbqC,EAASrC,GACTgC,EAASe,GAAc/C,GAElBmB,IAAQ4B,EAhBgB,kCAiBjBI,IAAYN,GAjBK,QAiB3BJ,EAjB2B,eAoB7BH,EAAQG,GApBqB,4CAAD,wDAqB3B,IAEHW,qBAAU,WACRb,EAAWvC,KACV,CAACA,EAAOuC,IAEX,IAAMb,EAAQc,sBAAW,uCACvB,WAAOa,EAAOC,GAAd,mBAAAZ,EAAA,sEAEIT,GAAW,GACXC,EAAS,IAHb,SAIkCiB,IAAUE,EAAOC,GAJnD,uBAIYtD,EAJZ,EAIYA,MAAOmB,EAJnB,EAImBA,KACfoB,EAAWvC,EAAOmB,GALtB,mBAMW,GANX,yCAQIwB,QAAQC,IAAR,MACAV,EAAS,2BATb,mBAUW,GAVX,yBAYID,GAAW,GACXU,QAAQC,IAAIzB,GAbhB,6EADuB,wDAiBvB,CAACoB,EAAYpB,IAGTK,EAAWgB,sBAAW,uCAC1B,uCAAAE,EAAA,6DAASa,EAAT,EAASA,KAAMF,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAtB,SAEIrB,GAAW,GACXC,EAAS,IAHb,SAIkCiB,IAAa,CAAEI,OAAMF,QAAOC,aAJ9D,uBAIYtD,EAJZ,EAIYA,MAAOmB,EAJnB,EAImBA,KACfoB,EAAWvC,EAAOmB,GALtB,mBAMW,GANX,yCAQIwB,QAAQC,IAAR,MACAV,EAAS,oCATb,mBAUW,GAVX,yBAYID,GAAW,GAZf,6EAD0B,sDAgB1B,CAACM,IAGGX,EAASY,uBAAY,WACzBD,EAAW,KAAM,QAChB,CAACA,IAOEiB,EAAQC,mBACZ,iBAAO,CACLxC,UACAC,QACAlB,QACAmB,OACAO,QACAE,SACAR,QACAI,cAEF,CAACP,EAASC,EAAOlB,EAAOmB,EAAMC,EAAOM,EAAOE,EAAQJ,IAGtD,OAAO,cAAC3B,EAAY6D,SAAb,CAAsBF,MAAOA,EAA7B,SAAqC1B,O,8ICzI/B6B,EAhBE,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,MAAmC,EAA5BC,YAA4B,EAAfC,SAC/C,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKC,IAAKL,EAAKM,IAAI,GAAGF,UAAU,eAChC,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BH,IAC7B,qBAAKG,UAAU,mBAAf,SACE,cAAC,IAAD,CAAMG,GAAE,0BAAqBR,GAA7B,SACE,wBAAQK,UAAU,mBAAlB,kCCIGI,EAZE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QACvB,OACE,mCACGA,EACEC,QAAO,SAACC,GAAD,OAAOA,EAAET,WAAaM,KAC7BI,KAAI,SAACD,GACJ,OAAO,cAAC,EAAD,2BAAyBA,GAAzB,IAA4BR,UAAU,cAAvBQ,EAAEb,UCR5Be,EAAgB,CAAC,CACff,GAAI,EACJgB,SAAU,UAEd,CACIhB,GAAI,EACJgB,SAAU,SAEd,CACIhB,GAAI,EACJgB,SAAU,aAEd,CACIhB,GAAI,EACJgB,SAAU,WAEd,CACIhB,GAAI,EACJgB,SAAU,aAEd,CACIhB,GAAI,EACJgB,SAAU,SAEd,CACIhB,GAAI,EACJgB,SAAU,SAEd,CACIhB,GAAI,EACJgB,SAAU,W,yDCxBLC,EAAW,uCAAG,4BAAAnC,EAAA,sEACJoC,IAAMC,IAAN,WAAqBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QADjC,cACjBA,EADiB,yBAEhBA,GAFgB,2CAAH,qDAoBXC,EAAU,uCAAG,WAAOvB,GAAP,SAAAlB,EAAA,sEAChBoC,YAAM,CACRM,OAAQ,SACRC,IAAI,gBAAD,OAAkBzB,KAHH,2CAAH,sDAOV0B,EAAW,uCAAG,WAAO1B,GAAP,SAAAlB,EAAA,sEACVoC,IAAMC,IAAN,0BAA6BnB,IAAMoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAAMF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAD/D,mFAAH,sDAUXK,EAAc,uCAAG,WAAO3B,EAAP,wBAAAlB,EAAA,6DAC1BoB,EAD0B,EAC1BA,MACAC,EAF0B,EAE1BA,YACAF,EAH0B,EAG1BA,IACAG,EAJ0B,EAI1BA,SAJ0B,SAMpBc,IAAMU,IAAN,uBAA0B5B,GAAM,CAClCE,QACAC,cACAF,MACAG,aAVsB,2CAAH,wDCnCZ,SAASyB,IAAW,IAAD,EACKC,mBAAS,UAAWvC,EAAiB,CACxEwC,gBAAgB,IADVT,EADwB,EACxBA,KAAMU,EADkB,EAClBA,UAAWC,EADO,EACPA,QAIzB,OAAID,EAEA,qCACE,cAACE,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YADtC,cAMAH,EAEA,qCACE,+EACA,cAAC,IAAD,CAAS5B,UAAU,iBAMvB,qCACE,uBACCU,EAAcD,KAAI,SAACJ,GAClB,OAAKhD,QAAQ4D,EAAKX,QAAQ0B,MAAK,SAACC,GAAD,OAAOA,EAAElC,WAAaM,EAAIV,OAGvD,sBAAKK,UAAU,cAAf,UACE,oBAAIL,GAAIU,EAAIM,SAAZ,SAAuBN,EAAIM,WAC3B,qBAAKX,UAAU,YAAf,SACE,cAAC,EAAD,CAAUK,IAAKA,EAAIV,GAAIW,QAASW,EAAKX,cAHPD,EAAIV,IAF/B,mC,WC7BJiB,EAAW,uCAAG,4BAAAnC,EAAA,sEACJoC,IAAMC,IAAN,UAAoBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKA,QADrC,cACjBA,EADiB,OAEvBvC,QAAQC,IAAIsC,GAFW,kBAGhBA,GAHgB,2CAAH,qDAMXiB,EAAW,uCAAG,iCAAAzD,EAAA,sDACvB0D,EADuB,EACvBA,KACAjF,EAFuB,EAEvBA,KACAkF,EAHuB,EAGvBA,MAEAvB,IAAMwB,KAAN,SAAqB,CACjBF,OACAjF,OACAkF,UARmB,2CAAH,sDAYXE,EAAe,uCAAG,WAAO3C,GAAP,SAAAlB,EAAA,sEACrBoC,YAAM,CACRM,OAAQ,SACRC,IAAI,gBAAD,OAAkBzB,EAAGA,MAHD,2CAAH,sDAWf4C,EAAiB,uCAAG,WAAO5C,GAAP,iBAAAlB,EAAA,sEAGnBoC,IAAMC,IAAN,yBAA4BnB,IAAMoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAH/B,uBAEzBA,EAFyB,EAEzBA,KAFyB,kBAItBA,GAJsB,2CAAH,sD,2CCtBf,SAASuB,IAAe,IAAD,EACU1E,mBAAS,GADnB,mBAC7B2E,EAD6B,KACZC,EADY,OAEF5E,oBAAS,GAFP,mBAE7B6E,EAF6B,KAElBC,EAFkB,OAGV9E,mBAAS,GAHC,mBAG7BsE,EAH6B,KAGtBS,EAHsB,OAMZ/E,oBAAS,GANG,mBAM7BgF,EAN6B,KAMvBC,EANuB,KAO9BC,EAAc,kBAAMD,GAAQ,IAG5BE,EAAUC,cAERvD,EAAOwD,cAAPxD,GAEAzC,EAASH,cAATG,KAd4B,EAoBhCuE,mBAAS,CAAC,OAAQ9B,IAAK,kBAAMyD,EAAuBzD,KAAK,CAC3D+B,gBAAgB,IAJV2B,EAjB4B,EAiBlCpC,KACAU,EAlBkC,EAkBlCA,UACAC,EAnBkC,EAmBlCA,QAKY0B,EAAe7B,mBAC3B,CAAC,kBACD,kBAAM8B,EAAA,OAA4BrG,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMyC,MACxC,CACE+B,gBAAgB,IAJZT,KAQQiB,EAAgBsB,sBAAYD,GAApCE,OACQC,EAAgBF,sBAAYD,GAApCE,OAER,GAAI9B,EACF,OACE,qCACE,cAACE,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YADtC,aAOJ,GAAIH,EACF,MAAO,+CAGT,IAUMV,EAAU,uCAAG,sBAAAzC,EAAA,sDACjBsE,GAAQ,GADS,2CAAH,qDAYVY,EAAiB,uCAAG,sBAAAlF,EAAA,sEAClB2E,EAAA,OAAsBC,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAa1D,IADjB,OAExBsD,EAAQW,QAAQ,KAFQ,2CAAH,qDAKjBC,EAA0B,SAACC,GAC3BA,GACFjB,EAAST,EAAQ,GAGnB,IAAM2B,EAAetB,EAAkB,EACnCsB,EAAeV,EAAYW,UAAUC,OACvCvB,EAAmBqB,GAEnBnB,GAAa,IAIjB,OACE,sCACO,OAAJ1F,QAAI,IAAJA,OAAA,EAAAA,EAAMgH,MAAMC,SAAS,UACpB,qCACE,sBAAKnE,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMoE,UAAQ,kBAAkBjE,GAAE,qBAAgBkD,EAAY1D,IAA9D,SACE,cAAC,IAAD,CAAOK,UAAU,iBAEnB,cAAC,IAAD,CACEoE,UAAQ,oBACRpE,UAAU,eACVqE,QAASnD,OAIb,eAACoD,EAAA,EAAD,CAAOxB,KAAMA,EAAMyB,OAAQvB,EAA3B,UACE,cAACsB,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMI,MAAP,0DAIF,cAACJ,EAAA,EAAMK,KAAP,UACE,+BACE,yCAAYtB,EAAYxD,SACxB,+CAAkBwD,EAAYvD,eAC9B,uCAAUuD,EAAYzD,OACtB,2CACY,GAERc,EAAcH,QACZ,SAAC0B,GAAD,OAAOA,EAAEtC,KAAO0D,EAAYtD,YAC5B,GAAGY,iBAKb,eAAC2D,EAAA,EAAMM,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ9C,QAAQ,QAAQsC,QAASrB,EAAjC,mBAGA,cAAC6B,EAAA,EAAD,CAAQ9C,QAAQ,SAASsC,QAASV,EAAlC,kCAON,6BAGF,qBACE3D,UAAU,SACVC,IAAKoD,EAAYzD,IACjBM,IAAI,gBACJkE,UAAQ,mBAEV,mBAAGpE,UAAU,QAAb,SAAsBqD,EAAY1D,KAClC,oBAAIK,UAAU,aAAaoE,UAAQ,mBAAnC,SACGf,EAAYxD,QAEf,mBAAGG,UAAU,mBAAmBoE,UAAQ,yBAAxC,SACGf,EAAYvD,cAGd6C,EACC,sBAAK3C,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,6BACmBoC,EADnB,MAC6BiB,EAAYW,UAAUC,UAEnD,qBAAKjE,UAAU,gBAAf,SACE,wBACEoE,UAAQ,yBACRpE,UAAU,yBACVqE,QA5Gc,SAACS,GACzB5C,EAAY,CAAEC,KAAMkB,EAAY1D,GAAIzC,KAAMA,EAAKyC,GAAIyC,MAAOA,IAC1Da,EAAQW,QAAQ,MAuGR,6BAUJ,qCACoC,IAAjCP,EAAYW,UAAUC,OACrB,mBAAGjE,UAAU,SAAb,4DAIA,mCACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,kBAAf,sBACYyC,EAAkB,EAD9B,IAEGY,EAAYW,UAAUC,UAEzB,qBAAKjE,UAAU,oBAAf,SACGqD,EAAYW,UAAUvB,GAAiBsC,cAG5C,sBAAK/E,UAAU,iBAAf,UACE,wBACEoE,UAAQ,qBACRpE,UAAU,yBACVqE,QAAS,kBACPR,EACER,EAAYW,UAAUvB,GAAiBuC,UACrC3B,EAAYW,UAAUvB,GAAiBwC,gBAN/C,SAUG5B,EAAYW,UAAUvB,GAAiBuC,UAG1C,wBACEZ,UAAQ,qBACRpE,UAAU,yBACVqE,QAAS,kBACPR,EACER,EAAYW,UAAUvB,GAAiByC,UACrC7B,EAAYW,UAAUvB,GAAiBwC,gBAN/C,SAUG5B,EAAYW,UAAUvB,GAAiByC,UAG1C,wBACEd,UAAQ,qBACRpE,UAAU,yBACVqE,QAAS,kBACPR,EACER,EAAYW,UAAUvB,GAAiB0C,UACrC9B,EAAYW,UAAUvB,GAAiBwC,gBAN/C,SAUG5B,EAAYW,UAAUvB,GAAiB0C,kBAOlD,sBAAKnF,UAAU,SAAf,UACE,6CACCtB,QAAQC,IAAI2E,GACW,KAAb,OAAVA,QAAU,IAAVA,OAAA,EAAAA,EAAYW,QACX,6DAEA,qBAAKjE,UAAU,YAAf,SACE,eAACoF,EAAA,EAAD,CAAOC,YAAU,EAAjB,UACE,gCACE,+BACE,mCACA,uCACA,sCACA,6CAIJ,uCACG/B,QADH,IACGA,OADH,EACGA,EAAY7C,KAAI,SAAC6E,GAChB,OACE,oCACY,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWC,YAAX,OAAuBlC,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAa1D,IACnC,mCACE,+BACE,6BAAK2F,EAAU3F,KACf,+BACG2F,EAAUlD,MADb,IAEGiB,EAAYW,UAAUC,UAEzB,6BACG,IAAIrH,KAAK0I,EAAUE,MAAMC,mBAE5B,6BACE,cAAC,IAAD,CACEC,UAAQ,oBACR1F,UAAU,aACVqE,QAAS,kBAzNf,SAAC,GAAY,IAAV1E,EAAS,EAATA,GAC7B+D,EAAY,CAAE/D,GAAIA,IAClBsD,EAAQW,QAAQ,KAwNkB+B,CAAoB,CAAEhG,GAAI2F,EAAU3F,YAdnC2F,EAAU3F,MAqBrB,kD,wCCzRb,SAASiG,IAAW,IAAD,EACL7I,cAAnBK,EADwB,EACxBA,SAAUF,EADc,EACdA,KACZS,EAASD,cAETmI,EAAetH,uBAAY,WAC/BZ,MACC,CAACA,IAEJ,OACE,mCACE,cAACmI,EAAA,EAAD,CAAQ9F,UAAU,eAAe+F,kBAAgB,EAACC,OAAO,KAAzD,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,4BACA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,0BAC7B,eAACN,EAAA,EAAOO,SAAR,CAAiB1G,GAAG,wBAApB,UACE,eAAC2G,EAAA,EAAD,CAAKtG,UAAU,UAAf,UACE,cAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,iBAAvB,mBAGK,OAAJ9C,QAAI,IAAJA,OAAA,EAAAA,EAAMgH,MAAMC,SAAS,UACpB,mCACE,eAACoC,EAAA,EAAD,CAAa1G,MAAM,QAAnB,UACE,cAAC0G,EAAA,EAAYC,KAAb,UACE,cAAC,IAAD,CAAMrG,GAAG,aAAaiE,UAAQ,eAA9B,yBAIF,cAACmC,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,UACE,cAAC,IAAD,CAAMrG,GAAG,iBAAiBiE,UAAQ,eAAlC,6BAIF,cAACmC,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,UACE,cAAC,IAAD,CAAMrG,GAAG,cAAciE,UAAQ,eAA/B,+BAMJ,QAEN,cAACkC,EAAA,EAAD,UACGlJ,EACC,qCACE,cAAC,IAAD,CACE4C,UAAU,UACVG,GAAE,2BAAejD,QAAf,IAAeA,OAAf,EAAeA,EAAMyC,IACvByE,UAAQ,kBAHV,gBAKGlH,QALH,IAKGA,OALH,EAKGA,EAAMoC,OAGT,cAAC,IAAD,CACEU,UAAU,UACV+B,QAAQ,UACRsC,QAASwB,EAHX,yBASF,qCACE,cAAC,IAAD,CAAM1F,GAAG,SAASH,UAAU,UAA5B,qBAGA,cAAC,IAAD,CAAMG,GAAG,YAAYH,UAAU,UAA/B,qCCrEH,SAAS0G,IACtB,OACE,qBAAK1G,UAAU,YAAf,SACE,eAACoF,EAAA,EAAD,CAAOC,YAAU,EAAjB,UACE,gCACE,+BACE,mCACA,2CAGJ,gCACGpE,EAAKR,KAAI,SAACkG,GACT,OACE,+BACE,6BAAKA,EAAQhH,KACb,6BAAKgH,EAAQhG,aAFNgG,EAAQC,kBCZhB,SAASC,IAAiB,IAC/B3J,EAASH,cAATG,KAEF+F,EAAUC,cAMhB,OAJI7F,QAAQH,MACN,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMgH,MAAMC,SAAS,WAAUlB,EAAQW,QAAQ,MAIpD,qCACE,4CAEA,cAAC8C,EAAD,O,aCPS,SAASI,IAAa,IAAD,IACVhJ,oBAAS,GADC,mBAC3BgF,EAD2B,KACrBC,EADqB,OAEMjF,mBAAS,IAFf,mBAE3BiJ,EAF2B,KAEbC,EAFa,KAI5B/D,EAAUC,cAKV+D,EAAgB,SAAC9E,GACrB6E,EAAgB7E,GAHOY,GAAQ,IAPC,EAcGtB,mBAAS,YAAavC,GAAnD+B,EAd0B,EAc1BA,KAAMU,EAdoB,EAcpBA,UAAWC,EAdS,EAcTA,QACjB1E,EAASH,cAATG,KAMR,OAJIG,QAAQH,MACN,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMgH,MAAMC,SAAS,WAAUlB,EAAQW,QAAQ,MAGlDjC,EACK,aAGLC,EACK,+CAIP,qCACE,yCAEA,qBAAK5B,UAAU,YAAf,SACE,eAACoF,EAAA,EAAD,CAAOC,YAAU,EAAjB,UACE,gCACE,+BACE,mCACA,uCACA,+CAGJ,gCACGpE,EAAKX,QAAQG,KAAI,SAACyG,GACjB,OAAO,cAACC,EAAD,CAAgCC,KAAMF,GAAnBA,EAASvH,cAM3C,eAAC0H,EAAA,EAAD,CAAWrH,UAAU,gBAAgB8C,KAAMA,EAAMyB,OA5CjC,kBAAMxB,GAAQ,IA4C9B,UACE,cAACsE,EAAA,EAAU7C,OAAX,CAAkBC,aAAW,EAA7B,SACE,cAAC4C,EAAA,EAAU3C,MAAX,iBAAkBqC,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAclH,UAElC,eAACwH,EAAA,EAAU1C,KAAX,WACE,mCAAIoC,QAAJ,IAAIA,OAAJ,EAAIA,EAAcpH,KAClB,qBAAKM,IAAG,OAAE8G,QAAF,IAAEA,OAAF,EAAEA,EAAcnH,IAAKI,UAAU,aAAaE,IAAI,KACxD,mCAAI6G,QAAJ,IAAIA,OAAJ,EAAIA,EAAcjH,cAClB,4BACE,6CAEF,oCACGiH,QADH,IACGA,GADH,UACGA,EAAc/C,iBADjB,aACG,EAAyBvD,KAAI,SAACD,GAC7B,OAAO,6BAAgBA,EAAEuE,UAATvE,EAAEb,SAGtB,uBACA,cAAC,IAAD,CAAMyE,UAAQ,gBAAgBjE,GAAE,qBAAgB4G,EAAapH,IAA7D,SACE,cAAC,IAAD,CAAOK,UAAU,0BAO3B,SAASmH,EAAaC,GACpB,IAAMF,EAAWE,EAAKA,KAEtB,OACE,mCACE,qBACE/C,QAAS,kBAAM4C,EAAcC,IAC7BlH,UAAU,oBACVoE,UAAQ,eAHV,UAKE,oBAAIA,UAAQ,iBAAZ,SAA8B8C,EAASvH,KACvC,oBAAIyE,UAAQ,oBAAZ,SAAiC8C,EAASrH,QAC1C,oBAAIuE,UAAQ,uBAAZ,SAEIkD,EAAW/G,QAAO,SAACF,GAAD,OAASA,EAAIV,KAAOuH,EAASnH,YAAU,GACtDY,iB,mBC/DF4G,EAnCI,SAAC,GAOb,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WAEGC,GACC,EAFJC,SAEI,0EAIAC,cAFFvK,EAFE,EAEFA,SACawK,EAHX,EAGFC,UAAaD,OAEf,OACE,qCACE,gCACE,uBAAO/H,UAAU,MAAMiI,QAAST,EAAhC,SACGA,IAEH,iDACMjK,EAASiK,EAAOG,IADtB,IAEED,aAAcA,EACdQ,YAAaV,EACbC,KAAMA,EACN9H,GAAI6H,EACJlI,KAAMkI,GACFI,OAGPG,EAAOP,IACN,mBAAGxH,UAAU,gBAAb,SAA8B+H,EAAOP,GAAOW,cCxB9CC,EAAkB,CACtBhJ,MAAO,CAAEiJ,SAAU,iCACnBhJ,SAAU,CAAEgJ,SAAU,kCAGT,SAASC,IAAS,IAAD,EACOvL,cAA7BC,EADsB,EACtBA,QAASC,EADa,EACbA,MAAOG,EADM,EACNA,SAClB6F,EAAUC,cACVzF,EAAQD,cACR+K,EAAUC,cACRC,EAAwBF,EAAxBE,aAAcC,EAAUH,EAAVG,MAEtBvJ,qBAAU,WACJ/B,GAAU6F,EAAQW,QAAQ,QAGhC,IAAM+E,EAAepK,uBAAY,WAC/BmK,MACC,CAACA,IAEEE,EAAcrK,sBAAW,uCAC7B,+BAAAE,EAAA,6DAASW,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,SACwB5B,EAAM2B,EAAOC,GADrC,eAEe4D,EAAQW,QAAQ,KAF/B,2CAD6B,sDAK7B,CAACnG,EAAOwF,IAGV,OACE,8BACE,eAAC,IAAD,2BAAkBsF,GAAlB,cACE,yCACA,uBAAMM,SAAUJ,EAAaG,GAA7B,UACG3L,EAAQ,mBAAG+C,UAAU,aAAb,SAA2B/C,IAAa,sBAEjD,cAAC,EAAD,CACEuK,MAAM,QACNC,KAAK,OACLC,aAAa,GACbQ,YAAY,iBACZP,WAAYS,EAAgBhJ,MAC5BgF,UAAQ,eAEV,cAAC,EAAD,CACEoD,MAAM,WACNC,KAAK,WACLC,aAAa,GACbQ,YAAY,WACZP,WAAYS,EAAgB/I,SAC5B+E,UAAQ,kBAGV,cAACS,EAAA,EAAD,CACE9C,QAAQ,UACR0F,KAAK,SACLqB,SAAU9L,EACVoH,UAAQ,cAJV,qBAQA,cAACS,EAAA,EAAD,CAAQ9C,QAAQ,SAAS/B,UAAU,MAAMqE,QAASsE,EAAlD,6BC5DK,SAASL,IAAS,IAAD,EACOvL,cAA7BC,EADsB,EACtBA,QAAgBI,GADM,EACbH,MADa,EACNG,UAClB6F,EAAUC,cACV3F,EAAWD,cACXiL,EAAUC,cACRE,EAAmCH,EAAnCG,MAAOK,EAA4BR,EAA5BQ,UAAWN,EAAiBF,EAAjBE,aAE1BtJ,qBAAU,WACJ/B,GAAU6F,EAAQW,QAAQ,OAC7B,CAACX,EAAS7F,IAEb,IAAMgL,EAAkB5I,mBACtB,iBAAO,CACLJ,MAAO,CACLiJ,SAAU,oBACVW,QAAS,CACPzJ,MACE,yJACF4I,QAAS,4BAGb7I,KAAM,CACJ+I,SAAU,mBACVY,UAAW,CACT1J,MAAO,EACP4I,QAAS,8CAGb9I,SAAU,CACRgJ,UAAU,EACVY,UAAW,CACT1J,MAAO,EACP4I,QAAS,kDAGbe,gBAAiB,CACfb,UAAU,EACVc,SAAU,CACRC,aAAc,SAAC7J,GAEb,OADiBwJ,EAAU,cACPxJ,EAChB,KACA,2CAKZ,CAACwJ,IAGGM,EAAiB9K,sBAAW,uCAChC,iCAAAE,EAAA,6DAASa,EAAT,EAASA,KAAMF,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAtB,SACwB9B,EAAS,CAC7B+B,OACAF,QACAC,aAJJ,eAOe4D,EAAQW,QAAQ,KAP/B,2CADgC,sDAUhC,CAACrG,EAAU0F,IAGP0F,EAAepK,uBAAY,WAC/BmK,MACC,CAACA,IAEJ,OACE,eAAC,IAAD,2BAAkBH,GAAlB,cACE,0CACA,uBAAMM,SAAUJ,EAAaY,GAA7B,UACE,cAAC,EAAD,CACE7B,MAAM,QACNC,KAAK,OACLC,aAAa,GACbQ,YAAY,iBACZP,WAAYS,EAAgBhJ,QAE9B,cAAC,EAAD,CACEoI,MAAM,OACNC,KAAK,OACLC,aAAa,GACbQ,YAAY,OACZP,WAAYS,EAAgB9I,OAG9B,cAAC,EAAD,CACEkI,MAAM,WACNC,KAAK,WACLC,aAAa,GACbQ,YAAY,WACZP,WAAYS,EAAgB/I,WAG9B,cAAC,EAAD,CACEmI,MAAM,kBACNC,KAAK,WACLC,aAAa,GACbQ,YAAY,mBACZP,WAAYS,EAAgBc,kBAG9B,cAACrE,EAAA,EAAD,CAAQ9C,QAAQ,UAAU0F,KAAK,SAASqB,SAAU9L,EAAlD,sBAGA,cAAC6H,EAAA,EAAD,CAAQ9C,QAAQ,SAAS/B,UAAU,MAAMqE,QAASsE,EAAlD,2BC5GO,SAASW,EAAT,GAAoD,IAA5BzL,EAA2B,EAA3BA,SAAmB+J,GAAQ,EAAjB2B,KAAiB,oCACxDnM,EAAaL,cAAbK,SACAoM,EAAaC,cAAbD,SAER,OACE,cAAC,IAAD,2BAAW5B,GAAX,aACGxK,EAAWS,EAAW,cAAC,IAAD,CAAUzB,KAAMoN,EAAUrJ,GAAG,cCD3C,SAASuJ,IAAc,IAAD,EAK/BjI,mBAAS,aAAc8B,GAHnBoG,EAF2B,EAEjC1I,KACAU,EAHiC,EAGjCA,UACAC,EAJiC,EAIjCA,QAGM1E,EAASH,cAATG,KAEQwG,EAAgBF,sBAAYD,GAApCE,OAEFR,EAAUC,cAMhB,GAJI7F,QAAQH,MACN,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMgH,MAAMC,SAAS,WAAUlB,EAAQW,QAAQ,MAGlDjC,EACF,MAAO,aAGT,GAAIC,EACF,MAAO,+CAQT,OACE,qCACE,wCAEA,qBAAK5B,UAAU,YAAf,SACE,eAACoF,EAAA,EAAD,CAAOC,YAAU,EAAjB,UACE,gCACE,+BACE,mCACA,sCACA,sCACA,uCACA,sCACA,6CAGJ,gCACGsE,EAAMlJ,KAAI,SAAC6E,GACV,OACE,+BACE,6BAAKA,EAAU3F,KACf,oBAAIyE,UAAQ,kBAAZ,SAA+BkB,EAAUzF,QACzC,oBAAIuE,UAAQ,iBAAZ,SAA8BkB,EAAUhG,OACxC,oBAAI8E,UAAQ,kBAAZ,SAA+BkB,EAAUlD,QACzC,oBAAIgC,UAAQ,iBAAZ,SACG,IAAIxH,KAAK0I,EAAUE,MAAMoE,uBAE5B,6BACE,cAAC,IAAD,CACExF,UAAQ,mBACRpE,UAAU,aACVqE,QAAS,kBApCD,SAAC,GAAY,IAAV1E,EAAS,EAATA,GAC7B+D,EAAY,CAAE/D,GAAIA,IAClBsD,EAAQW,QAAQ,KAkCiB+B,CAAoB,CAAEhG,GAAI2F,EAAU3F,0BC3DzE,IAAMyI,GAAkB,CACtBvI,MAAO,CACLwI,SAAU,oBACVY,UAAW,CAAE1J,MAAO,EAAG4I,QAAS,4CAElCrI,YAAa,CAAEuI,SAAU,gCACzBzI,IAAK,CAAEyI,SAAU,mBACjBtI,SAAU,CACRsI,SAAU,8CACVwB,IAAK,CAAEtK,MAAO,EAAG4I,QAAS,qBAC1B2B,IAAK,CACHvK,MAAOmB,EAAcuD,OACrBkE,QAAQ,qBAAD,OAAuBzH,EAAcuD,WAKnC,SAAS8F,KAAY,IAC1BpK,EAAOwD,cAAPxD,GADyB,EAET5C,cAATG,GAFkB,EAEzBD,MAFyB,EAElBC,MAEfwB,QAAQC,IAAIzB,GAJqB,MAU7BuE,mBAAS,CAAC,WAAY9B,IAAK,kBAAMyD,EAAuBzD,KAAK,CAC/D+B,gBAAgB,IAJV2B,EAPyB,EAO/BpC,KACAU,EAR+B,EAQ/BA,UACAC,EAT+B,EAS/BA,QAKIqB,EAAUC,cACVqF,EAAUC,cACRC,EAAiBF,EAAjBE,aAEFuB,EAAezL,uBAAY,WAC/B0E,EAAQW,QAAR,0BAAmCjE,MAClC,CAACsD,IAEJ,GAAItB,EACF,MAAO,aAGT,GAAIC,EACF,MAAO,8CAGT,IAAMqI,EAAY,uCAAG,mCAAAxL,EAAA,6DAASoB,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,YAAaF,EAA7B,EAA6BA,IAAKG,EAAlC,EAAkCA,SACrDrB,QAAQC,IAAI,CAAEkB,QAAOC,cAAaF,MAAKG,aADpB,SAEbqD,EAA0BzD,EAAI,CAClCE,QACAC,cACAF,MACAG,aANiB,OAQnBkD,EAAQW,QAAR,0BAAmCjE,IARhB,2CAAH,sDAWlB,OACE,oCACO,OAAJzC,QAAI,IAAJA,OAAA,EAAAA,EAAMgH,MAAMC,SAAS,UACpB,mCACG9G,QAAQgG,GACP,eAAC,IAAD,2BAAkBkF,GAAlB,cACE,oDAAgBlF,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAaxD,SAC7B,uBAAMgJ,SAAUJ,EAAawB,GAA7B,UACE,sBAAKjK,UAAU,4BAAf,UACE,cAAC,EAAD,CACEwH,MAAM,QACNC,KAAK,OACLC,aAAa,GACbQ,YAAY,QACZP,WAAYS,GAAgBvI,MAC5BuE,UAAQ,cAEV,cAAC,EAAD,CACEoD,MAAM,cACNC,KAAK,OACLC,aAAa,GACbQ,YAAY,cACZP,WAAYS,GAAgBtI,YAC5BsE,UAAQ,oBAEV,cAAC,EAAD,CACEoD,MAAM,MACNC,KAAK,OACLC,aAAa,GACbQ,YAAY,YACZP,WAAYS,GAAgBxI,IAC5BwE,UAAQ,YAEV,cAAC,EAAD,CACEoD,MAAM,WACNC,KAAK,OACLC,aAAa,GACbQ,YAAW,2BAAsBxH,EAAcuD,QAC/C0D,WAAYS,GAAgBrI,SAC5BqE,UAAQ,iBAEV,wBACErC,QAAQ,UACR/B,UAAU,qBACVyH,KAAK,SACLrD,UAAQ,aAJV,yBAQA,wBACEpE,UAAU,yBACVqE,QAAS2F,EAFX,wCAOF,uBACA,2CACA,cAACtD,EAAD,WAIJ,qCACE,oBAAG1G,UAAU,aAAb,2BACiBL,EADjB,yBAGA,wBAAQK,UAAU,cAAcqE,QAAS2F,EAAzC,0CAON/G,EAAQW,QAAQ,OC5IT,SAASsG,KAAiB,IAC/BhN,EAASH,cAATG,KAER,OACE,sBAAK8C,UAAU,gBAAf,UACE,2CACA,8CAAU9C,QAAV,IAAUA,OAAV,EAAUA,EAAMoC,QAChB,+CAAWpC,QAAX,IAAWA,OAAX,EAAWA,EAAMkC,SACjB,uCAEE,oCACGlC,QADH,IACGA,OADH,EACGA,EAAMgH,MAAMzD,KAAI,SAAC0J,GAChB,OACE,mCACE,6BAAKA,iBCiENC,OA/Df,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAACxE,EAAD,IACA,+BACE,qBAAK5F,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqK,KAAK,SAASC,OAAK,EAA1B,SACE,cAAChC,EAAD,MAGF,cAAC,IAAD,CAAO+B,KAAK,YAAYC,OAAK,EAA7B,SACE,cAAC,EAAD,MAGF,cAAChB,EAAD,CAAce,KAAK,IAAIC,OAAK,EAA5B,SACE,cAAC,IAAD,CAAUnK,GAAG,eAGf,cAACmJ,EAAD,CACEA,cAAY,EACZe,KAAK,0CACLC,OAAK,EAHP,SAKE,cAAC,IAAD,CAAUnK,GAAG,eAGf,cAACmJ,EAAD,CAAce,KAAK,WAAWC,OAAK,EAAnC,SACE,cAAC9I,EAAD,MAGF,cAAC8H,EAAD,CAAce,KAAK,sBAAsBC,OAAK,EAA9C,SACE,cAAC9H,EAAD,MAGF,cAAC8G,EAAD,CAAce,KAAK,aAAaC,OAAK,EAArC,SACE,cAACxD,EAAD,MAGF,cAACwC,EAAD,CAAce,KAAK,iBAAiBC,OAAK,EAAzC,SACE,cAACzD,EAAD,MAGF,cAACyC,EAAD,CAAce,KAAK,cAAcC,OAAK,EAAtC,SACE,cAACZ,EAAD,MAGF,cAACJ,EAAD,CAAce,KAAK,iBAAiBC,OAAK,EAAzC,SACE,cAACP,GAAD,MAGF,cAACT,EAAD,CAAce,KAAK,gBAAgBC,OAAK,EAAxC,SACE,cAACJ,GAAD,mBC3DDK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1J,MAAK,YAAkD,IAA/C2J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCRO,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvN,EAAA,EAAD,UACE,cAAC,sBAAD,CAAqBwN,OAAQL,GAA7B,SACE,cAAC,GAAD,UAKNM,SAASC,eAAe,SAM1Bf,M,gCCzBA,kGAGa1J,EAAQ0K,IAAUC,OAAO,CAClCC,QAASC,2CACTC,QAAS,CACLC,cAAc,UAAD,OAAY1N,aAAaC,QAAQzC,EAAOC,eAIhDsD,EAAe,SAAClD,GACrBA,EACA8E,EAAMgL,SAASF,QAAf,+BAAoD5P,UAE7C8E,EAAMgL,SAASF,QAAf,gB,qRCVFlO,EAAK,uCAAG,WAAO2B,EAAOC,GAAd,iBAAAZ,EAAA,sEAGPoC,IAAMwB,KAAN,cAA0B,CAChCjD,QACAC,aALa,uBAEb4B,EAFa,EAEbA,KAFa,kBAOVA,GAPU,2CAAH,wDAUL1D,EAAQ,uCAAG,qCAAAkB,EAAA,6DACpBa,EADoB,EACpBA,KACAF,EAFoB,EAEpBA,MACAC,EAHoB,EAGpBA,SAHoB,SAOVwB,IAAMwB,KAAN,iBAA6B,CACnC/C,OACAF,QACAC,aAVgB,uBAMhB4B,EANgB,EAMhBA,KANgB,kBAabA,GAba,2CAAH,sDAgBR6K,EAAO,uCAAG,WAAOlN,GAAP,iBAAAH,EAAA,sEAGToC,IAAMC,IAAN,qBAAwBlC,IAHf,uBAEfqC,EAFe,EAEfA,KAFe,kBAIZA,GAJY,2CAAH,wD","file":"static/js/main.38b22c41.chunk.js","sourcesContent":["import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport * as api from \"../api/users\";\nimport config from \"../config.json\";\nimport { setAuthToken } from \"../api\";\n\nconst JWT_TOKEN_KEY = config.token_key;\nconst AuthContext = createContext();\n\nfunction parseJwt(token) {\n  if (!token) return {};\n  const base64url = token.split(\".\")[1];\n  const payload = Buffer.from(base64url, \"base64\");\n  const jsonPayload = payload.toString(\"ascii\");\n  return JSON.parse(jsonPayload);\n}\n\nfunction parseExp(exp) {\n  if (!exp) return null;\n  if (typeof exp !== \"number\") exp = Number(exp);\n  if (isNaN(exp)) return null;\n  return new Date(exp * 1000);\n}\n\nconst useAuth = () => useContext(AuthContext);\n\nexport const useSession = () => {\n  const { loading, error, token, user, ready } = useAuth();\n  return {\n    loading,\n    error,\n    token,\n    user,\n    ready,\n    isAuthed: Boolean(token),\n  };\n};\n\nexport const useRegister = () => {\n  const { register } = useAuth();\n  return register;\n};\n\nexport const useLogin = () => {\n  const { login } = useAuth();\n  return login;\n};\n\nexport const useLogout = () => {\n  const { logout } = useAuth();\n  return logout;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [ready, setReady] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [token, setToken] = useState(localStorage.getItem(JWT_TOKEN_KEY));\n  const [user, setUser] = useState(null);\n\n  const setSession = useCallback(async (token, u) => {\n    console.log(user);\n    const { exp, userId } = parseJwt(token);\n    const expiry = parseExp(exp);\n    const stillValid = expiry >= new Date();\n\n    if (stillValid) {\n      localStorage.setItem(JWT_TOKEN_KEY, token);\n    } else {\n      localStorage.removeItem(JWT_TOKEN_KEY);\n      token = null;\n    }\n    setAuthToken(token);\n    setToken(token);\n    setReady(stillValid && token);\n\n    if (!user && stillValid) {\n      u = await api.getById(userId);\n    }\n\n    setUser(u);\n  }, []);\n\n  useEffect(() => {\n    setSession(token);\n  }, [token, setSession]);\n\n  const login = useCallback(\n    async (email, password) => {\n      try {\n        setLoading(true);\n        setError(\"\");\n        const { token, user } = await api.login(email, password);\n        setSession(token, user);\n        return true;\n      } catch (error) {\n        console.log(error);\n        setError(\"Login failed try again.\");\n        return false;\n      } finally {\n        setLoading(false);\n        console.log(user);\n      }\n    },\n    [setSession, user]\n  );\n\n  const register = useCallback(\n    async ({ name, email, password }) => {\n      try {\n        setLoading(true);\n        setError(\"\");\n        const { token, user } = await api.register({ name, email, password });\n        setSession(token, user);\n        return true;\n      } catch (error) {\n        console.log(error);\n        setError(\"Something went wrong, try again.\");\n        return false;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [setSession]\n  );\n\n  const logout = useCallback(() => {\n    setSession(null, null);\n  }, [setSession]);\n\n  // logt in, in mijn account\n  // useEffect(() => {\n  //   login(\"robin@mail.com\", \"12345678\");\n  // }, [login]);\n\n  const value = useMemo(\n    () => ({\n      loading,\n      error,\n      token,\n      user,\n      login,\n      logout,\n      ready,\n      register,\n    }),\n    [loading, error, token, user, ready, login, logout, register]\n  );\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n","import { Link } from \"react-router-dom\";\n\nconst QuizItem = ({ id, img, title, description, category }) => {\n  return (\n    <div className=\"quiz-item\">\n      <img src={img} alt=\"\" className=\"card-image\" />\n      <div className=\"card-content\">\n        <div className=\"card-title\">{title}</div>\n        <div className=\"card-description\">\n          <Link to={`/quizzes/detail/${id}`}>\n            <button className=\"sbutton noborder\">Play Quiz</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizItem;\n","import QuizItem from \"./QuizItem\";\n\nconst QuizList = ({ cat, quizzes }) => {\n  return (\n    <>\n      {quizzes\n        .filter((q) => q.category === cat)\n        .map((q) => {\n          return <QuizItem key={q.id} {...q} className=\"quiz-item\" />;\n        })}\n    </>\n  );\n};\n\nexport default QuizList;\n","const CATEGORY_DATA = [{\n        id: 1,\n        cat_name: \"Cities\"\n    },\n    {\n        id: 2,\n        cat_name: \"Games\"\n    },\n    {\n        id: 3,\n        cat_name: \"Buildings\"\n    },\n    {\n        id: 4,\n        cat_name: \"Animals\"\n    },\n    {\n        id: 5,\n        cat_name: 'Languages'\n    },\n    {\n        id: 6,\n        cat_name: 'Music'\n    },\n    {\n        id: 7,\n        cat_name: 'Maths'\n    },\n    {\n        id: 8,\n        cat_name: 'Sports'\n    },\n]\n\nexport {\n    CATEGORY_DATA,\n};","import {\n    axios\n} from \".\";\n\n\n\nexport const getAllItems = async () => {\n    const data = await axios.get(`quizzes`).then(res => res.data);\n    return data;\n}\n\nexport const createQuiz = async ({\n    title,\n    description,\n    img,\n    category\n}) => {\n\n    axios.post(`quizzes`, {\n        title,\n        description,\n        img,\n        category,\n    });\n}\n\nexport const deleteQuiz = async (id) => {\n    await axios({\n        method: \"delete\",\n        url: `quizzes/quiz/${id}`,\n    });\n}\n\nexport const getQuizById = async (id) => {\n    return await axios.get(`quizzes/quiz/id/${id}`).then(res => res.data).then(res => res.data);\n}\n\nexport const getQuizByName = async (name) => {\n    const data = await axios.get(`quizzes/quiz/name/${name}`);\n    console.log(data);\n    return data;\n}\n\nexport const updateQuizById = async (id, {\n    title,\n    description,\n    img,\n    category\n}) => {\n    await axios.put(`quizzes/quiz/${id}`, {\n        title,\n        description,\n        img,\n        category\n    });\n}","import QuizList from \"../components/QuizList\";\nimport { CATEGORY_DATA } from \"../data/mock-data\";\nimport { Spinner } from \"react-bootstrap\";\nimport { BiError } from \"react-icons/bi\";\n\nimport { useQuery } from \"react-query\";\nimport * as api from \"../api/quizzes\";\n\nexport default function Quizzes() {\n  const { data, isLoading, isError } = useQuery(\"quizzes\", api.getAllItems, {\n    refetchOnMount: true,\n  });\n\n  if (isLoading) {\n    return (\n      <>\n        <Spinner animation=\"border\" variant=\"primary\" /> Loading\n      </>\n    );\n  }\n\n  if (isError) {\n    return (\n      <>\n        <p>\"Error: Something went wrong try again later.\"</p>\n        <BiError className=\"error-img\" />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <br />\n      {CATEGORY_DATA.map((cat) => {\n        if (!Boolean(data.quizzes.find((e) => e.category === cat.id)))\n          return <></>;\n        return (\n          <div className=\"quiz-slider\" key={cat.id}>\n            <h1 id={cat.cat_name}>{cat.cat_name}</h1>\n            <div className=\"quiz-list\">\n              <QuizList cat={cat.id} quizzes={data.quizzes} />\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n","import {\n    axios\n} from \".\";\n\n\n\nexport const getAllItems = async () => {\n    const data = await axios.get(`scores`).then(res => res.data.data);\n    console.log(data)\n    return data;\n}\n\nexport const createScore = async ({\n    quiz,\n    user,\n    score,\n}) => {\n    axios.post(`scores`, {\n        quiz,\n        user,\n        score,\n    });\n}\n\nexport const deleteScoreById = async (id) => {\n    await axios({\n        method: \"delete\",\n        url: `scores/score/${id.id}`,\n    });\n}\n\nexport const getScoreById = async (id) => {\n    return await axios.get(`scores/score/id/${id}`).then(response => response.data).then(data => data[0]);\n}\n\nexport const getScoresByUserId = async (id) => {\n    const {\n        data\n    } = await axios.get(`scores/user/id/${id}`).then(res => res.data);\n    return data;\n}","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as apiQuizzes from \"../api/quizzes\";\nimport * as apiScores from \"../api/scores\";\nimport { useQuery, useMutation } from \"react-query\";\nimport { Spinner, Table, Button, Modal } from \"react-bootstrap\";\nimport { useSession } from \"../contexts/AuthProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport { BiCog } from \"react-icons/bi\";\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\nimport { CATEGORY_DATA } from \"../data/mock-data\";\n\nexport default function QuizDetails() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  // MODAL\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const history = useHistory();\n\n  const { id } = useParams();\n\n  const { user } = useSession();\n\n  const {\n    data: currentQuiz,\n    isLoading,\n    isError,\n  } = useQuery([\"quiz\", id], () => apiQuizzes.getQuizById(id), {\n    refetchOnMount: true,\n  });\n\n  const { data: userScores } = useQuery(\n    [\"quizUserScore\"],\n    () => apiScores.getScoresByUserId(user?.id),\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  const { mutate: createScore } = useMutation(apiScores.createScore);\n  const { mutate: deleteScore } = useMutation(apiScores.deleteScoreById);\n\n  if (isLoading) {\n    return (\n      <>\n        <Spinner animation=\"border\" variant=\"primary\" />\n        Loading\n      </>\n    );\n  }\n\n  if (isError) {\n    return \"Error: Something went wrong try again later.\";\n  }\n\n  const handleOnDeleteScore = ({ id }) => {\n    deleteScore({ id: id });\n    history.replace(\"/\");\n  };\n\n  const handleOnSaveScore = (event) => {\n    createScore({ quiz: currentQuiz.id, user: user.id, score: score });\n    history.replace(\"/\");\n  };\n\n  const deleteQuiz = async () => {\n    setShow(true);\n\n    // const qtitle = prompt(\n    //   \"Are you sure you want to delete this quiz?\\nType the title of the quiz in the textbox in order to delete the quiz.\"\n    // );\n    // if (\n    //   Boolean(qtitle) &&\n    //   qtitle.toLowerCase() === currentQuiz?.title.toLowerCase()\n    // ) {\n  };\n\n  const handleModalDelete = async () => {\n    await apiQuizzes.deleteQuiz(currentQuiz?.id);\n    history.replace(\"/\");\n  };\n\n  const handleAnswerOptionClick = (isRight) => {\n    if (isRight) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < currentQuiz.questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    <>\n      {user?.roles.includes(\"admin\") ? (\n        <>\n          <div className=\"actionButtons\">\n            <Link data-cy=\"quizDetailsEdit\" to={`/quiz/edit/${currentQuiz.id}`}>\n              <BiCog className=\"editbutton\" />\n            </Link>\n            <RiDeleteBinLine\n              data-cy=\"quizDetailsRemove\"\n              className=\"removebutton\"\n              onClick={deleteQuiz}\n            />\n          </div>\n\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>\n                Are you sure you want to delete this quiz\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <ul>\n                <li>Title: {currentQuiz.title}</li>\n                <li>Description: {currentQuiz.description}</li>\n                <li>Img: {currentQuiz.img}</li>\n                <li>\n                  Category:{\"\"}\n                  {\n                    CATEGORY_DATA.filter(\n                      (e) => e.id === currentQuiz.category\n                    )[0].cat_name\n                  }\n                </li>\n              </ul>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"light\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"danger\" onClick={handleModalDelete}>\n                Delete Quiz\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>\n      ) : (\n        <></>\n      )}\n\n      <img\n        className=\"banner\"\n        src={currentQuiz.img}\n        alt=\"Not Available\"\n        data-cy=\"quizDetailsImg\"\n      ></img>\n      <p className=\"light\">{currentQuiz.id}</p>\n      <h1 className=\"quiz-title\" data-cy=\"quizDetailsTitle\">\n        {currentQuiz.title}\n      </h1>\n      <p className=\"quiz-description\" data-cy=\"quizDetailsDescription\">\n        {currentQuiz.description}\n      </p>\n\n      {showScore ? (\n        <div className=\"question-all\">\n          <div className=\"quiz-end\">\n            Quiz has ended: {score} / {currentQuiz.questions.length}\n          </div>\n          <div className=\"score-section\">\n            <button\n              data-cy=\"quizDetailsSubmitScore\"\n              className=\"shadowBox noborder m-2\"\n              onClick={handleOnSaveScore}\n            >\n              Save Score\n            </button>\n          </div>\n        </div>\n      ) : (\n        <>\n          {currentQuiz.questions.length === 0 ? (\n            <p className=\"danger\">\n              There are no questions available for this quiz\n            </p>\n          ) : (\n            <>\n              <div className=\"question-all\">\n                <div className=\"question-section\">\n                  <div className=\"question-number\">\n                    Question {currentQuestion + 1}/\n                    {currentQuiz.questions.length}\n                  </div>\n                  <div className=\"question-part m-2\">\n                    {currentQuiz.questions[currentQuestion].question}\n                  </div>\n                </div>\n                <div className=\"answer-section\">\n                  <button\n                    data-cy=\"quizDetailsAnswer1\"\n                    className=\"shadowBox noborder m-2\"\n                    onClick={() =>\n                      handleAnswerOptionClick(\n                        currentQuiz.questions[currentQuestion].answer1 ===\n                          currentQuiz.questions[currentQuestion].correctAnswer\n                      )\n                    }\n                  >\n                    {currentQuiz.questions[currentQuestion].answer1}\n                  </button>\n\n                  <button\n                    data-cy=\"quizDetailsAnswer2\"\n                    className=\"shadowBox noborder m-2\"\n                    onClick={() =>\n                      handleAnswerOptionClick(\n                        currentQuiz.questions[currentQuestion].answer2 ===\n                          currentQuiz.questions[currentQuestion].correctAnswer\n                      )\n                    }\n                  >\n                    {currentQuiz.questions[currentQuestion].answer2}\n                  </button>\n\n                  <button\n                    data-cy=\"quizDetailsAnswer3\"\n                    className=\"shadowBox noborder m-2\"\n                    onClick={() =>\n                      handleAnswerOptionClick(\n                        currentQuiz.questions[currentQuestion].answer3 ===\n                          currentQuiz.questions[currentQuestion].correctAnswer\n                      )\n                    }\n                  >\n                    {currentQuiz.questions[currentQuestion].answer3}\n                  </button>\n                </div>\n              </div>\n            </>\n          )}\n\n          <div className=\"scores\">\n            <h2>Your scores</h2>\n            {console.log(userScores)}\n            {userScores?.length === 0 ? (\n              <p>No scores yet for this quiz.</p>\n            ) : (\n              <div className=\"shadowBox\">\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Score</th>\n                      <th>Date</th>\n                      <th>Delete</th>\n                    </tr>\n                  </thead>\n                  {/* // ?.find((s) => s?.quiz_id === currentQuiz?.id) */}\n                  <tbody>\n                    {userScores?.map((scoreItem) => {\n                      return (\n                        <>\n                          {scoreItem?.quiz_id === currentQuiz?.id ? (\n                            <>\n                              <tr key={scoreItem.id}>\n                                <td>{scoreItem.id}</td>\n                                <td>\n                                  {scoreItem.score}/\n                                  {currentQuiz.questions.length}\n                                </td>\n                                <td>\n                                  {new Date(scoreItem.date).toLocaleString()}\n                                </td>\n                                <td>\n                                  <RiDeleteBinLine\n                                    cy-data=\"quizDetailsDelete\"\n                                    className=\"error-text\"\n                                    onClick={() =>\n                                      handleOnDeleteScore({ id: scoreItem.id })\n                                    }\n                                  />\n                                </td>\n                              </tr>\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                        </>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport { Navbar, Nav, Container, NavDropdown, Button } from \"react-bootstrap\";\nimport { useLogout, useSession } from \"../contexts/AuthProvider\";\nimport { Link } from \"react-router-dom\";\n\nexport default function QuizNav() {\n  const { isAuthed, user } = useSession();\n  const logout = useLogout();\n\n  const handleLogout = useCallback(() => {\n    logout();\n  }, [logout]);\n\n  return (\n    <>\n      <Navbar className=\"shadowBoxNav\" collapseOnSelect expand=\"lg\">\n        <Container>\n          <Navbar.Brand>Robin Quizzes</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Link to=\"/\" className=\"navItem center\">\n                Home\n              </Link>\n              {user?.roles.includes(\"admin\") ? (\n                <>\n                  <NavDropdown title=\"Lists\">\n                    <NavDropdown.Item>\n                      <Link to=\"/quiz/list\" data-cy=\"navScoreList\">\n                        Quiz List\n                      </Link>\n                    </NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item>\n                      <Link to=\"/category/list\" data-cy=\"navScoreList\">\n                        Category List\n                      </Link>\n                    </NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item>\n                      <Link to=\"/score/list\" data-cy=\"navScoreList\">\n                        Score List\n                      </Link>\n                    </NavDropdown.Item>\n                  </NavDropdown>\n                </>\n              ) : null}\n            </Nav>\n            <Nav>\n              {isAuthed ? (\n                <>\n                  <Link\n                    className=\"navItem\"\n                    to={`/userdata/${user?.id}`}\n                    data-cy=\"quizNavUsername\"\n                  >\n                    {user?.name}\n                  </Link>\n\n                  <Link\n                    className=\"navItem\"\n                    variant=\"primary\"\n                    onClick={handleLogout}\n                  >\n                    Sign out\n                  </Link>\n                </>\n              ) : (\n                <>\n                  <Link to=\"/login\" className=\"navItem\">\n                    Sign in\n                  </Link>\n                  <Link to=\"/register\" className=\"navItem\">\n                    Register\n                  </Link>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n","import { Table } from \"react-bootstrap\";\nimport { CATEGORY_DATA as data } from \"../data/mock-data\";\n\nexport default function CategoryTable() {\n  return (\n    <div className=\"shadowBox\">\n      <Table responsive>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((catItem) => {\n            return (\n              <tr key={catItem.cat_id}>\n                <td>{catItem.id}</td>\n                <td>{catItem.cat_name}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","import { useSession } from \"../../contexts/AuthProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport CategoryTable from \"../../components/CategoryTable\";\n\nexport default function CategoryIndex() {\n  const { user } = useSession();\n\n  const history = useHistory();\n\n  if (Boolean(user)) {\n    if (!user?.roles.includes(\"admin\")) history.replace(\"/\");\n  }\n\n  return (\n    <>\n      <h1>Categories</h1>\n\n      <CategoryTable />\n    </>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { Table, Badge, Button, Offcanvas } from \"react-bootstrap\";\nimport * as api from \"../api/quizzes\";\nimport { useQuery } from \"react-query\";\nimport { CATEGORY_DATA as categories } from \"../data/mock-data\";\nimport { useState } from \"react\";\nimport { useSession } from \"../contexts/AuthProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport { BiCog } from \"react-icons/bi\";\n\nexport default function QuizIndex() {\n  const [show, setShow] = useState(false);\n  const [selectedQuiz, setSelectedQuiz] = useState({});\n\n  const history = useHistory();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleOnClick = (quiz) => {\n    setSelectedQuiz(quiz);\n    handleShow();\n  };\n\n  const { data, isLoading, isError } = useQuery(\"quizIndex\", api.getAllItems);\n  const { user } = useSession();\n\n  if (Boolean(user)) {\n    if (!user?.roles.includes(\"admin\")) history.replace(\"/\");\n  }\n\n  if (isLoading) {\n    return \"Loading...\";\n  }\n\n  if (isError) {\n    return \"Error: Something went wrong try again later.\";\n  }\n\n  return (\n    <>\n      <h1>Quizzes</h1>\n\n      <div className=\"shadowBox\">\n        <Table responsive>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Title</th>\n              <th>Category</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.quizzes.map((quizItem) => {\n              return <QuizListItem key={quizItem.id} item={quizItem} />;\n            })}\n          </tbody>\n        </Table>\n      </div>\n\n      <Offcanvas className=\"shadowBox m-5\" show={show} onHide={handleClose}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>{selectedQuiz?.title}</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          <p>{selectedQuiz?.id}</p>\n          <img src={selectedQuiz?.img} className=\"canvas-img\" alt=\"\" />\n          <p>{selectedQuiz?.description}</p>\n          <p>\n            <b>Questions:</b>\n          </p>\n          <ul>\n            {selectedQuiz?.questions?.map((q) => {\n              return <li key={q.id}>{q.question}</li>;\n            })}\n          </ul>\n          <br />\n          <Link data-cy=\"quizIndexEdit\" to={`/quiz/edit/${selectedQuiz.id}`}>\n            <BiCog className=\"editbutton\" />\n          </Link>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n\n  function QuizListItem(item) {\n    const quizItem = item.item;\n\n    return (\n      <>\n        <tr\n          onClick={() => handleOnClick(quizItem)}\n          className=\"pointer changeRed\"\n          data-cy=\"quizListItem\"\n        >\n          <td data-cy=\"quizListItemId\">{quizItem.id}</td>\n          <td data-cy=\"quizListItemTitle\">{quizItem.title}</td>\n          <td data-cy=\"quizListItemCategory\">\n            {\n              categories.filter((cat) => cat.id === quizItem.category)[0]\n                .cat_name\n            }\n          </td>\n        </tr>\n      </>\n    );\n  }\n}\n","import { useFormContext } from \"react-hook-form\";\n\nconst LabelInput = ({\n  label,\n  type,\n  defaultValue,\n  validation,\n  isActive = false,\n  ...rest\n}) => {\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext();\n  return (\n    <>\n      <div>\n        <label className=\"lbl\" htmlFor={label}>\n          {label}\n        </label>\n        <input\n          {...register(label, validation)}\n          defaultValue={defaultValue}\n          placeholder={label}\n          type={type}\n          id={label}\n          name={label}\n          {...rest}\n        />\n      </div>\n      {errors[label] && (\n        <p className=\"validationmsg\">{errors[label].message}</p>\n      )}\n    </>\n  );\n};\n\nexport default LabelInput;\n","import { FormProvider, useForm } from \"react-hook-form\";\nimport LabelInput from \"./LabelInput\";\nimport { Button } from \"react-bootstrap\";\nimport { useCallback, useEffect } from \"react\";\nimport { useLogin, useSession } from \"../contexts/AuthProvider\";\nimport { useHistory } from \"react-router-dom\";\n\nconst validationRules = {\n  email: { required: \"Both fields must be filled in\" },\n  password: { required: \"Both fields must be filled in\" },\n};\n\nexport default function Login() {\n  const { loading, error, isAuthed } = useSession();\n  const history = useHistory();\n  const login = useLogin();\n  const methods = useForm();\n  const { handleSubmit, reset } = methods;\n\n  useEffect(() => {\n    if (isAuthed) history.replace(\"/\");\n  });\n\n  const handleCancel = useCallback(() => {\n    reset();\n  }, [reset]);\n\n  const handleLogin = useCallback(\n    async ({ email, password }) => {\n      const success = await login(email, password);\n      if (success) history.replace(\"/\");\n    },\n    [login, history]\n  );\n\n  return (\n    <div>\n      <FormProvider {...methods}>\n        <h1>Sign in</h1>\n        <form onSubmit={handleSubmit(handleLogin)}>\n          {error ? <p className=\"error-text\">{error}</p> : <p></p>}\n\n          <LabelInput\n            label=\"email\"\n            type=\"text\"\n            defaultValue=\"\"\n            placeholder=\"your@email.com\"\n            validation={validationRules.email}\n            data-cy=\"emailInput\"\n          />\n          <LabelInput\n            label=\"password\"\n            type=\"password\"\n            defaultValue=\"\"\n            placeholder=\"password\"\n            validation={validationRules.password}\n            data-cy=\"passwordInput\"\n          />\n\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={loading}\n            data-cy=\"loginButton\"\n          >\n            Sign in\n          </Button>\n          <Button variant=\"danger\" className=\"m-1\" onClick={handleCancel}>\n            Cancel\n          </Button>\n        </form>\n      </FormProvider>\n    </div>\n  );\n}\n","import { FormProvider, useForm } from \"react-hook-form\";\nimport LabelInput from \"./LabelInput\";\nimport { Button } from \"react-bootstrap\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { useRegister, useSession } from \"../contexts/AuthProvider\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const { loading, error, isAuthed } = useSession();\n  const history = useHistory();\n  const register = useRegister();\n  const methods = useForm();\n  const { reset, getValues, handleSubmit } = methods;\n\n  useEffect(() => {\n    if (isAuthed) history.replace(\"/\");\n  }, [history, isAuthed]);\n\n  const validationRules = useMemo(\n    () => ({\n      email: {\n        required: \"Email is required\",\n        pattern: {\n          value:\n            /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          message: \"This email is not valid\",\n        },\n      },\n      name: {\n        required: \"Name is required\",\n        minLength: {\n          value: 3,\n          message: \"Name should be at least 3 characters long\",\n        },\n      },\n      password: {\n        required: true,\n        minLength: {\n          value: 5,\n          message: \"Password should be at least 5 characters long\",\n        },\n      },\n      confirmPassword: {\n        required: true,\n        validate: {\n          notIdentical: (value) => {\n            const password = getValues(\"password\");\n            return password === value\n              ? null\n              : \"both password need to be identical\";\n          },\n        },\n      },\n    }),\n    [getValues]\n  );\n\n  const handleRegister = useCallback(\n    async ({ name, email, password }) => {\n      const success = await register({\n        name,\n        email,\n        password,\n      });\n\n      if (success) history.replace(\"/\");\n    },\n    [register, history]\n  );\n\n  const handleCancel = useCallback(() => {\n    reset();\n  }, [reset]);\n\n  return (\n    <FormProvider {...methods}>\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit(handleRegister)}>\n        <LabelInput\n          label=\"email\"\n          type=\"text\"\n          defaultValue=\"\"\n          placeholder=\"your@email.com\"\n          validation={validationRules.email}\n        />\n        <LabelInput\n          label=\"name\"\n          type=\"text\"\n          defaultValue=\"\"\n          placeholder=\"name\"\n          validation={validationRules.name}\n        />\n\n        <LabelInput\n          label=\"password\"\n          type=\"password\"\n          defaultValue=\"\"\n          placeholder=\"password\"\n          validation={validationRules.password}\n        />\n\n        <LabelInput\n          label=\"confirmPassword\"\n          type=\"password\"\n          defaultValue=\"\"\n          placeholder=\"comfirm password\"\n          validation={validationRules.confirmPassword}\n        />\n\n        <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n          Register\n        </Button>\n        <Button variant=\"danger\" className=\"m-1\" onClick={handleCancel}>\n          Cancel\n        </Button>\n      </form>\n    </FormProvider>\n  );\n}\n","import { Redirect, useLocation, Route } from \"react-router-dom\";\nimport { useMemo } from \"react\";\nimport { useSession } from \"../contexts/AuthProvider\";\n\nexport default function PrivateRoute({ children, role, ...rest }) {\n  const { isAuthed } = useSession();\n  const { pathname } = useLocation();\n\n  return (\n    <Route {...rest}>\n      {isAuthed ? children : <Redirect from={pathname} to=\"/login\" />}\n    </Route>\n  );\n}\n","import { Table, Offcanvas } from \"react-bootstrap\";\nimport * as apiScores from \"../api/scores\";\nimport { useQuery, useMutation } from \"react-query\";\nimport { CATEGORY_DATA as categories } from \"../data/mock-data\";\nimport { useSession } from \"../contexts/AuthProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport Quizzes from \"./Quizzes\";\nimport { RiDeleteBinLine } from \"react-icons/ri\";\n\nexport default function ScoreIndex() {\n  const {\n    data: sdata,\n    isLoading,\n    isError,\n  } = useQuery(\"scoreIndex\", apiScores.getAllItems);\n\n  const { user } = useSession();\n\n  const { mutate: deleteScore } = useMutation(apiScores.deleteScoreById);\n\n  const history = useHistory();\n\n  if (Boolean(user)) {\n    if (!user?.roles.includes(\"admin\")) history.replace(\"/\");\n  }\n\n  if (isLoading) {\n    return \"Loading...\";\n  }\n\n  if (isError) {\n    return \"Error: Something went wrong try again later.\";\n  }\n\n  const handleOnDeleteScore = ({ id }) => {\n    deleteScore({ id: id });\n    history.replace(\"/\");\n  };\n\n  return (\n    <>\n      <h1>Scores</h1>\n\n      <div className=\"shadowBox\">\n        <Table responsive>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Quiz</th>\n              <th>User</th>\n              <th>Score</th>\n              <th>Date</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sdata.map((scoreItem) => {\n              return (\n                <tr>\n                  <td>{scoreItem.id}</td>\n                  <td data-cy=\"scoreIndexTitle\">{scoreItem.title}</td>\n                  <td data-cy=\"scoreIndexName\">{scoreItem.name}</td>\n                  <td data-cy=\"scoreIndexScore\">{scoreItem.score}</td>\n                  <td data-cy=\"scoreIndexDate\">\n                    {new Date(scoreItem.date).toLocaleDateString()}\n                  </td>\n                  <td>\n                    <RiDeleteBinLine\n                      data-cy=\"scoreIndexDelete\"\n                      className=\"error-text\"\n                      onClick={() => handleOnDeleteScore({ id: scoreItem.id })}\n                    />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </>\n  );\n\n  //   function QuizListItem(item) {\n  //     const quizItem = item.item;\n\n  //     return (\n  //       <>\n  //         <tr\n  //           onClick={() => handleOnClick(quizItem)}\n  //           className=\"pointer changeRed\"\n  //         >\n  //           <td>{quizItem.id}</td>\n  //           <td>{quizItem.title}</td>\n  //           <td>\n  //             {\n  //               categories.filter((cat) => cat.id === quizItem.category)[0]\n  //                 .cat_name\n  //             }\n  //           </td>\n  //         </tr>\n  //       </>\n  //     );\n  //   }\n}\n","import { FormProvider, useForm } from \"react-hook-form\";\nimport LabelInput from \"../components/LabelInput\";\nimport { Button } from \"react-bootstrap\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useSession } from \"../contexts/AuthProvider\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"react-query\";\nimport * as apiQuizzes from \"../api/quizzes\";\nimport CategoryTable from \"../components/CategoryTable\";\nimport { CATEGORY_DATA } from \"../data/mock-data\";\n\nconst validationRules = {\n  title: {\n    required: \"Title is required\",\n    minLength: { value: 3, message: \"Title should have at least 3 characters\" },\n  },\n  description: { required: \"The quiz needs a description\" },\n  img: { required: \"Img is required\" },\n  category: {\n    required: \"You need to enter a number for the category\",\n    min: { value: 1, message: \"lowest value is 1\" },\n    max: {\n      value: CATEGORY_DATA.length,\n      message: `highest values is ${CATEGORY_DATA.length}`,\n    },\n  },\n};\n\nexport default function QuizEdit() {\n  const { id } = useParams();\n  const { error, user } = useSession();\n\n  console.log(user);\n\n  const {\n    data: currentQuiz,\n    isLoading,\n    isError,\n  } = useQuery([\"quizEdit\", id], () => apiQuizzes.getQuizById(id), {\n    refetchOnMount: true,\n  });\n\n  const history = useHistory();\n  const methods = useForm();\n  const { handleSubmit } = methods;\n\n  const goToHomePage = useCallback(() => {\n    history.replace(`/quizzes/detail/${id}`);\n  }, [history]);\n\n  if (isLoading) {\n    return \"Loading...\";\n  }\n\n  if (isError) {\n    return \"Error: Something went wrong try again later\";\n  }\n\n  const handleUpdate = async ({ title, description, img, category }) => {\n    console.log({ title, description, img, category });\n    await apiQuizzes.updateQuizById(id, {\n      title,\n      description,\n      img,\n      category,\n    });\n    history.replace(`/quizzes/detail/${id}`);\n  };\n\n  return (\n    <>\n      {user?.roles.includes(\"admin\") ? (\n        <>\n          {Boolean(currentQuiz) ? (\n            <FormProvider {...methods}>\n              <h1>Edit Quiz: {currentQuiz?.title}</h1>\n              <form onSubmit={handleSubmit(handleUpdate)}>\n                <div className=\"shadowBox p-5 fit-content\">\n                  <LabelInput\n                    label=\"title\"\n                    type=\"text\"\n                    defaultValue=\"\"\n                    placeholder=\"Title\"\n                    validation={validationRules.title}\n                    data-cy=\"editTitle\"\n                  />\n                  <LabelInput\n                    label=\"description\"\n                    type=\"text\"\n                    defaultValue=\"\"\n                    placeholder=\"Description\"\n                    validation={validationRules.description}\n                    data-cy=\"editDescription\"\n                  />\n                  <LabelInput\n                    label=\"img\"\n                    type=\"text\"\n                    defaultValue=\"\"\n                    placeholder=\"Img (URL)\"\n                    validation={validationRules.img}\n                    data-cy=\"editImg\"\n                  />\n                  <LabelInput\n                    label=\"category\"\n                    type=\"text\"\n                    defaultValue=\"\"\n                    placeholder={`Category Id: 1 - ${CATEGORY_DATA.length}`}\n                    validation={validationRules.category}\n                    data-cy=\"editCategory\"\n                  />\n                  <button\n                    variant=\"primary\"\n                    className=\"shadowBox noborder\"\n                    type=\"submit\"\n                    data-cy=\"editSubmit\"\n                  >\n                    Update Quiz\n                  </button>\n                  <button\n                    className=\"shadowBox noborder m-1\"\n                    onClick={goToHomePage}\n                  >\n                    Go Back To Details Page\n                  </button>\n                </div>\n                <br />\n                <b>Categories</b>\n                <CategoryTable />\n              </form>\n            </FormProvider>\n          ) : (\n            <>\n              <p className=\"error-text\">\n                Quiz with Id: {id} could not be found\n              </p>\n              <button className=\"info-button\" onClick={goToHomePage}>\n                Go back to the homepage\n              </button>\n            </>\n          )}\n        </>\n      ) : (\n        history.replace(\"/\")\n      )}\n    </>\n  );\n}\n","import { useSession } from \"../contexts/AuthProvider\";\n\nexport default function UserComponent() {\n  const { user } = useSession();\n\n  return (\n    <div className=\"shadowBox p-5\">\n      <h1>User Data</h1>\n      <p>Naam: {user?.name}</p>\n      <p>Email: {user?.email}</p>\n      <p>\n        Roles:\n        <ul>\n          {user?.roles.map((rol) => {\n            return (\n              <>\n                <li>{rol}</li>\n              </>\n            );\n          })}\n        </ul>\n      </p>\n    </div>\n  );\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Quizzes from \"./pages/Quizzes\";\nimport QuizDetails from \"./pages/QuizDetails\";\nimport QuizNav from \"./components/QuizNav\";\nimport CategoryIndex from \"./pages/category/CategoryIndex\";\nimport QuizIndex from \"./pages/QuizIndex\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ScoreIndex from \"./pages/ScoreIndex\";\nimport QuizEdit from \"./pages/QuizEdit\";\nimport UserComponent from \"./components/UserComponent\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <QuizNav />\n        <main>\n          <div className=\"App\">\n            <Switch>\n              <Route path=\"/login\" exact>\n                <Login />\n              </Route>\n\n              <Route path=\"/register\" exact>\n                <Register />\n              </Route>\n\n              <PrivateRoute path=\"/\" exact>\n                <Redirect to=\"/quizzes\" />\n              </PrivateRoute>\n\n              <PrivateRoute\n                PrivateRoute\n                path=\"/frontendweb-karine-2122-RobinV-Hogent/\"\n                exact\n              >\n                <Redirect to=\"/quizzes\" />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/quizzes\" exact>\n                <Quizzes />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/quizzes/detail/:id\" exact>\n                <QuizDetails />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/quiz/list\" exact>\n                <QuizIndex />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/category/list\" exact>\n                <CategoryIndex />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/score/list\" exact>\n                <ScoreIndex />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/quiz/edit/:id\" exact>\n                <QuizEdit />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/userdata/:id\" exact>\n                <UserComponent />\n              </PrivateRoute>\n            </Switch>\n          </div>\n        </main>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { AuthProvider } from \"./contexts/AuthProvider\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <QueryClientProvider client={queryClient}>\n        <App />\n        {/* <ReactQueryDevtools /> */}\n      </QueryClientProvider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axiosRoot from 'axios';\nimport config from '../config.json';\n\nexport const axios = axiosRoot.create({\n    baseURL: process.env.REACT_APP_BACKEND_BASE_URL || config.base_url,\n    headers: {\n        Authorization: `Bearer ${localStorage.getItem(config.token_key)}`\n    }\n});\n\nexport const setAuthToken = (token) => {\n    if (token) {\n        axios.defaults.headers['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers['Authorization'];\n    }\n}","import {\n    axios\n} from \".\";\n\nexport const login = async (email, password) => {\n    const {\n        data\n    } = await axios.post(`users/login`, {\n        email,\n        password\n    });\n    return data;\n};\n\nexport const register = async ({\n    name,\n    email,\n    password,\n}) => {\n    const {\n        data\n    } = await axios.post(`users/register`, {\n        name,\n        email,\n        password\n    });\n\n    return data;\n};\n\nexport const getById = async (userId) => {\n    const {\n        data\n    } = await axios.get(`users/user/${userId}`);\n    return data;\n}"],"sourceRoot":""}